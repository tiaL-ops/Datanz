<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>District Official</title>
  <link rel="stylesheet" href="/styles/government.css" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <header class="top-nav">
    <div class="logo"><a href="/" id="datanzLink">DATANZ</a></div>
    <ul class="nav-links">
      <div class="dropdown">
        <li class="dropbtn">Menu</button>
        <div class="dropdown-content">
          <a href="/government">Home</a>
          <a href="/government/worst">Find the Worst Facilities</a>
          <a href="/government/advanced-search">Advanced Search</a>
        </div>
      </div>
      <li><a href="/auth/logout">Sign Out</a></li>
    </ul>
  </header>
  <h1>Welcome <%= username %></h1>

  <main>
  <div class="scroll-wrapper">
    <h2>Worst Facilities</h2>
    <!-- <button type="button" onclick="setLastMonth()">Last 30 Days</button> -->

    <button type="button" class="scroll-arrow left" onclick="lefti('worstScroll')">&#8249;</button>
    <div class="scroll-container" id="worstScroll">
      <% bottomTenWorst.forEach(facility => { %>
        <div class="card">
          <h3><%= facility.name %></h3>
          <button type="button" onclick='openFacilityPopup(<%= JSON.stringify(facility).replace(/</g, '\\u003c') %>)'>
            View Details
          </button>
        </div>
      <% }) %>
    </div>

    <button type="button" class="scroll-arrow right" onclick="scrollRight('worstScroll')">&#8250;</button>
  </div>
  <div class="scroll-wrapper">
    <h2>Best Facilities</h2>
    <button type="button" class="scroll-arrow left" onclick="lefti('bestScroll')">&#8249;</button>

    <div class="scroll-container" id="bestScroll">
      <% topThreeBest.forEach(facility => { %>
        <div class="card">
          <h3><%= facility.name %></h3>
          <button type="button" onclick='openFacilityPopup(<%= JSON.stringify(facility).replace(/</g, '\\u003c') %>)'>

            View Details
          </button>
        </div>
      <% }) %>
    </div>
    <button type="button" class="scroll-arrow right" onclick="scrollRight('bestScroll')">&#8250;</button>
  <section>
  </div>
  <br>
  <section>
    <h2>Facility Rating Trends Over Time</h2>
  
    <div class="filter-group">
      <label for="trendFacilitySelect">Select Facility for Trend:</label>
      <select id="trendFacilitySelect">
        <option value="all" selected>All Facilities (default)</option>
      
        <optgroup label="By Facility">
          <% results.forEach(facility => { %>
            <option value="facility-<%= facility.facility_id %>"><%= facility.name %></option>
          <% }); %>
        </optgroup>
      
        <optgroup label="By Region">
          <option value="region-Arusha">Arusha</option>
          <option value="region-Kilimanjaro">Kilimanjaro</option>
          <option value="region-Tanga">Tanga</option>
        </optgroup>
      </select>
      
    </div>
  
    <canvas id="timeTrendChart" style="width: 600px; height: 200px; margin: auto; display: block;"></canvas>

  </section>
  <br> 
  <h2>Other actions</h2>
  <p><a href = "/government/worst">View Worst Facilities by Criteria</a></p>
  <p><a href = "/government/advanced-search">Advanced Search</a></p>
  

  


  <div id="facilityModal" class="modal" style="display:none;">
    <div class="modal-content">
      <span class="close-button" onclick="closeFacilityPopup()">&times;</span>
      <h2 id="modalFacilityName"></h2>
      <table>
        <thead>
          <tr>
            <th>Name</th><th>Code</th><th>Location</th><th>Avg Wait</th>
            <th>Avg Sat</th><th>% No Privacy</th><th>% No Permission</th>
            <th>% Missed Tests</th><th>% Missed Meds</th><th>Top Payment</th>
            <th>Top Problems</th><th>Top Positives</th>
          </tr>
        </thead>
        <tbody id="modalFacilityDetails">
          <!-- Dynamic content -->
        </tbody>
      </table>
    </div>
  </div>
  </div>
</main>
</body>

<script src="/js/government.js"></script>
<script>
  window.addEventListener('DOMContentLoaded', () => {
    loadTrendData();
  });
</script>


<script>

//trend dchart
let chart = null;

function drawTrend(trendData) {
  const ctx = document.getElementById('timeTrendChart').getContext('2d');
 


  if (chart) {
    chart.destroy();  // destroy previous chart
  }

  chart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: trendData.map(item => item.date),
      datasets: [{
        label: 'Average Satisfaction',
        data: trendData.map(item => item.average_satisfaction),
        fill: false,
        borderColor: 'blue',
        tension: 0.1
      }]
    },
    options: {
      responsive: true,
      scales: {
        x: { title: { display: true, text: 'Date' } },
        y: { title: { display: true, text: 'Satisfaction Score' }, min: 0, max: 5 }
      }
    }
  });
}


const trendSelect = document.getElementById('trendFacilitySelect');
const startInput  = document.getElementById('startDate');
const endInput    = document.getElementById('endDate');

trendSelect.addEventListener('change', loadTrendData);
startInput?.addEventListener('change', loadTrendData);
endInput?.addEventListener('change', loadTrendData);


window.addEventListener('DOMContentLoaded', loadTrendData);

async function loadTrendData() {
  const selected  = trendSelect.value;
  const startDate = startInput?.value || '';
  const endDate   = endInput?.value   || '';

  let url;
  if (selected === 'all') {
    url = `/government/api/trend-all?startDate=${startDate}&endDate=${endDate}`;
  } 
  else if (selected.startsWith('facility-')) {
    // facility-123 → 123
    const facilityId = selected.substring('facility-'.length);
    url = `/government/api/trend/${facilityId}?startDate=${startDate}&endDate=${endDate}`;
  } 
  else if (selected.startsWith('region-')) {
    // region-North → North
    const regionName = selected.substring('region-'.length);
    url = `/government/api/trend-region/${encodeURIComponent(regionName)}?startDate=${startDate}&endDate=${endDate}`;
  } 
  else {
    console.error('Invalid selection:', selected);
    return;
  }

  try {
    const res = await fetch(url);
    if (!res.ok) throw new Error(res.statusText);
    const data = await res.json();
    drawTrend(data);
  } catch (err) {
    console.error('Error fetching trend data:', err);
  }
}
  // Select the DATANZ link
  const datanzLink = document.getElementById("datanzLink");

 // Add a click event listener
datanzLink.addEventListener("click", (event) => {
  event.preventDefault(); // Prevent the default link behavior

  // Display a confirmation dialog
  const userConfirmed = confirm(
    "You are leaving the Government page. Click Cancel to abort action or OK to return to the main page."
  );

  // If the user clicks "OK", navigate to the main page
  if (userConfirmed) {
    window.location.href = "/"; // Redirect to the main page
  }
});
</script>




</html>