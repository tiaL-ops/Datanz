<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>District Official</title>
  <link rel="stylesheet" href="/styles/government.css" />
  
</head>
<body>

  <h1>Welcome <%= username %></h1>

  <div class="scroll-wrapper">
    <h2>Top Best Facilities</h2>
    <button type="button" class="scroll-arrow left" onclick="scrollLeft('bestScroll')">&#8249;</button>

    <div class="scroll-container" id="bestScroll">
      <% topThreeBest.forEach(facility => { %>
        <div class="card">
          <h3><%= facility %></h3>
          <button>View Details</button>
        </div>
      <% }) %>
    </div>

    <button type="button" class="scroll-arrow right" onclick="scrollRight('bestScroll')">&#8250;</button>
  </div>

  <div class="scroll-wrapper">
    <h2>Top Worst Facilities</h2>
    <button type="button" class="scroll-arrow left" onclick="scrollLeft('worstScroll')">&#8249;</button>
    <div class="scroll-container" id="worstScroll">
      <% bottomTenWorst.forEach(facility => { %>
        <div class="card">
          <h3><%= facility %></h3>
          <button>View Details</button>
        </div>
      <% }) %>
    </div>

    <button type="button" class="scroll-arrow right" onclick="scrollRight('worstScroll')">&#8250;</button>
  </div>

  <form method="get">
    <h2>Refine Search</h2>

    <p style="grid-column: span 2; font-size: 0.875rem; color: #6B7280; margin-bottom: 1rem;">
      Use the filters below to find facilities that meet your expectations.
    </p>

    <div class="filter-group">
      <label for="region">Region</label>
      <select id="region" name="region">
        <option value="">Any</option>
        <option value="Arusha"      <%= filters.region==='Arusha'      ? 'selected' : '' %>>Arusha</option>
        <option value="Kilimanjaro" <%= filters.region==='Kilimanjaro' ? 'selected' : '' %>>Kilimanjaro</option>
        <option value="Tanga"       <%= filters.region==='Tanga'       ? 'selected' : '' %>>Tanga</option>
      </select>
    </div>

    <div class="filter-group">
      <label for="waitThreshold">
        Show facilities where average wait is more than
        <span class="range-value" id="waitVal"><%= filters.waitThreshold||0 %></span> minutes
      </label>
      <input
        id="waitThreshold"
        name="waitThreshold"
        type="range"
        min="0" max="300"
        value="<%= filters.waitThreshold||0 %>"
        oninput="waitVal.textContent = this.value"
      >
    </div>

    <div class="filter-group">
      <label for="satThreshold">
        Only show facilities where satisfaction is below
        <span class="range-value" id="satVal"><%= filters.satThreshold||5 %></span> out of 5
      </label>
      <input
        id="satThreshold"
        name="satThreshold"
        type="range"
        min="1" max="5"
        value="<%= filters.satThreshold||5 %>"
        oninput="satVal.textContent = this.value"
      >
    </div>

    <div class="filter-group">
      <label for="confiThreshold">
        Facilities with confidentiality concerns in
        <span class="range-value" id="confVal"><%= filters.confiThreshold||0 %></span>% or more of visits
      </label>
      <input
        id="confiThreshold"
        name="confiThreshold"
        type="range"
        min="0" max="100"
        value="<%= filters.confiThreshold||0 %>"
        oninput="confVal.textContent = this.value"
      >
    </div>

    <div class="filter-group">
      <label for="permThreshold">
        Show facilities where permission was not respected in
        <span class="range-value" id="permVal"><%= filters.permThreshold||0 %></span>% or more of visits
      </label>
      <input
        id="permThreshold"
        name="permThreshold"
        type="range"
        min="0" max="100"
        value="<%= filters.permThreshold||0 %>"
        oninput="permVal.textContent = this.value"
      >
    </div>

    <div class="filter-group">
      <label for="testThreshold">
        Highlight where
        <span class="range-value" id="testVal"><%= filters.testThreshold||0 %></span>% or more visits had missing tests
      </label>
      <input
        id="testThreshold"
        name="testThreshold"
        type="range"
        min="0" max="100"
        value="<%= filters.testThreshold||0 %>"
        oninput="testVal.textContent = this.value"
      >
    </div>

    <div class="filter-group">
      <label for="medThreshold">
        Facilities where patients missed medications in
        <span class="range-value" id="medVal"><%= filters.medThreshold||0 %></span>% or more visits
      </label>
      <input
        id="medThreshold"
        name="medThreshold"
        type="range"
        min="0" max="100"
        value="<%= filters.medThreshold||0 %>"
        oninput="medVal.textContent = this.value"
      >
    </div>

    <div class="filter-group">
      <label for="paymentMode">Prefer facilities where most patients pay with:</label>
      <select id="paymentMode" name="paymentMode">
        <option value="">Any</option>
        <option value="Cash"      <%= filters.paymentMode==='Cash'      ? 'selected' : '' %>>Cash</option>
        <option value="Insurance" <%= filters.paymentMode==='Insurance' ? 'selected' : '' %>>Insurance</option>
        <option value="Free"      <%= filters.paymentMode==='Free'      ? 'selected' : '' %>>Free</option>
      </select>
    </div>

    <div class="filter-group">
      <label for="bestCategory">Highlight the best facilities in this area:</label>
      <select id="bestCategory" name="bestCategory">
        <option value="">— none —</option>
        <% areas.forEach(area => { %>
          <option value="<%= area %>" <%= filters.bestCategory===area ? 'selected' : '' %>><%= area %></option>
        <% }) %>
      </select>
    </div>

    <div class="filter-group">
      <label for="worstCategory">Highlight the worst facilities in this area:</label>
      <select id="worstCategory" name="worstCategory">
        <option value="">— none —</option>
        <% areas.forEach(area => { %>
          <option value="<%= area %>" <%= filters.worstCategory===area ? 'selected' : '' %>><%= area %></option>
        <% }) %>
      </select>
    </div>

    <button type="submit">Apply Filters</button>
  </form>


  <% if (bestBy) { %>
    <section>
      <h2>Best facility for “<%= bestBy.area %>”</h2>
      <p>
        <strong><%= bestBy.best.facility_name %></strong>
        (Code: <%= bestBy.best.facility_code %>)<br>

      </p>
    </section>
  <% } %>


  <% if (worstBy) { %>
    <section>
      <h2>Worst facility for “<%= worstBy.area %>”</h2>
      <p>
        <strong><%= worstBy.worst.facility_name %></strong>
        (Code: <%= worstBy.worst.facility_code %>)<br>
        Mentions: <%= worstBy.worst.bad_count %>
      </p>
    </section>
  <% } %>


  <% if (results && results.length) { %>
    <table>
      <caption>Matching Facilities: <%= results.length %></caption>
      <thead>
        <tr>
          <th>Name</th><th>Code</th><th>Location</th><th>Avg Wait</th>
          <th>Avg Sat</th><th>% No Privacy</th><th>% No Permission</th>
          <th>% Missed Tests</th><th>% Meds Gap</th><th>Top Payment</th>
          <th>Top Problems</th><th>Top Positives</th>
        </tr>
      </thead>
      <tbody>
        <% results.forEach(fac => {
             const m = fac.metrics;
        %>
        <tr>
          <td><%= fac.name %></td>
          <td><%= fac.facility_code %></td>
          <td><%= fac.location %></td>
          <td><%= m.avgWait.toFixed(1) %>&nbsp;min</td>
          <td><%= m.avgSat %></td>
          <td><%= (100 - m.yesConfi).toFixed(0) %>%</td>
          <td><%= (100 - m.yesPerm).toFixed(0) %>%</td>
          <td><%= (100 - m.yesTests).toFixed(0) %>%</td>
          <td><%= (100 - m.yesMeds).toFixed(0) %>%</td>
          <td><%= m.topPayMode %></td>
          <td><%= m.topProblems.slice(0,3).join(", ") %></td>
          <td><%= m.topPositives.slice(0,3).join(", ") %></td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  <% } else { %>
    <p><em>No facilities match those filters.</em></p>
  <% } %>

</body>
<script>
  function scrollLeft(id) {
    const container = document.getElementById(id);
    if (container) {
      container.scrollBy({
        left: -300, // Scroll left by 300 pixels (adjust as needed)
        behavior: 'smooth' // Smooth scrolling effect
      });
      // console.log("Scrolled left for", id); // Optional: for debugging
    } else {
      console.error("Scroll container not found with ID:", id);
    }
  }

  function scrollRight(id) {
    const container = document.getElementById(id);
     if (container) {
      container.scrollBy({
        left: 300, 
        behavior: 'smooth' 
      });
      // console.log("Scrolled right for", id); 
     } else {
       console.error("Scroll container not found with ID:", id);
     }
  }
</script>
</html>